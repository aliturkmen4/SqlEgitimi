---------------------------------USER DEFINED FUNCTION------------------------------------
CREATE FUNCTION DBO.TOPLA(@SAYI1 AS INTEGER,@SAYI2 AS INTEGER) --ETRADE DB
RETURNS INT -->BANA NE DÖNDÜRECEK?
AS
BEGIN
	DECLARE @SONUC AS INTEGER
	SET @SONUC=@SAYI1+@SAYI2
	RETURN @SONUC
END

-->PROGRAMMABILITY - FUNCTIONS - SCALAR/VALUED FUNCTIONS(1 SONUÇ DÖNDÜRDÜÐÜ ÝÇÝN BURADA)

SELECT DBO.TOPLA(13,39)
------------------------------------------------------------------------------------------
--DOÐUM TARÝHÝ GÝRÝLEN BÝRÝNÝN YAÞINI HESAPLAYAN FONKSIYON  --CRM2 DB
CREATE FUNCTION DBO.CALCULATE_AGE(@BIRTHDATE AS DATE)

RETURNS INT

AS
BEGIN
	DECLARE @RESULT AS INT
	SET @RESULT=DATEDIFF(YEAR,@BIRTHDATE,GETDATE())
	RETURN @RESULT
END

SELECT DBO.CALCULATE_AGE('19960317')

SELECT TOP 1000 *, -->YAZDIÐIM FONKSIYONU CUSTOMERS TABLOSUNDA UYGULADIM!
DBO.CALCULATE_AGE(BIRTHDATE) AS AGE
FROM CUSTOMERS
------------------------------------------------------------------------------------------
--AYLARI FONKSIYONLAR CINSINDEN YAZDIRMA    --ETRADE DB
CREATE FUNCTION DBO.MONTHNAME_(@DATE AS DATETIME) -->BUNU YAPARAK ASIL KODUMDA KARIÞIKLIÐI ÖNLEMEYÝ AMAÇLIYORUM!!
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @RESULT AS VARCHAR(10)
	IF DATEPART(MONTH,@DATE)=1 SET @RESULT='01.OCAK'
	IF DATEPART(MONTH,@DATE)=2 SET @RESULT='02.ÞUBAT'
	IF DATEPART(MONTH,@DATE)=3 SET @RESULT='03.MART'
	IF DATEPART(MONTH,@DATE)=4 SET @RESULT='04.NÝSAN'
	IF DATEPART(MONTH,@DATE)=5 SET @RESULT='05.MAYIS'
	IF DATEPART(MONTH,@DATE)=6 SET @RESULT='06.HAZÝRAN'
	IF DATEPART(MONTH,@DATE)=7 SET @RESULT='07.TEMMUZ'
	IF DATEPART(MONTH,@DATE)=8 SET @RESULT='08.AÐUSTOS'
	IF DATEPART(MONTH,@DATE)=9 SET @RESULT='09.EYLÜL'
	IF DATEPART(MONTH,@DATE)=10 SET @RESULT='10.EKÝM'
	IF DATEPART(MONTH,@DATE)=11 SET @RESULT='11.KASIM'
	IF DATEPART(MONTH,@DATE)=12 SET @RESULT='12.ARALIK'
	RETURN @RESULT
END

SELECT DBO.MONTHNAME_('20190707') -->SCALAR-VALUED FUNCTION OLDUÐU ÝÇÝN BU ÞEKÝLDE ÇAÐIRABÝLDÝM!

-------------------------------------------------------------------------------------------
--ÝKÝ PARAMETRELÝ FONKSÝYON--
CREATE FUNCTION DBO.GET_ITEM_PRICE(@ITEMID AS INT, @PRICETYPE AS VARCHAR(10))
RETURNS FLOAT
AS
BEGIN
	DECLARE @RESULT AS FLOAT
	IF @PRICETYPE='MIN'
	BEGIN
		SELECT @RESULT=MIN(UNITPRICE) FROM ORDERDETAILS AS OD WHERE OD.ITEMID=@ITEMID
	END
	IF @PRICETYPE='MAX'
	BEGIN
		SELECT @RESULT=MAX(UNITPRICE) FROM ORDERDETAILS AS OD WHERE OD.ITEMID=@ITEMID
	END
	IF @PRICETYPE='AVG'
	BEGIN
		SELECT @RESULT=AVG(UNITPRICE) FROM ORDERDETAILS AS OD WHERE OD.ITEMID=@ITEMID
	END
	RETURN @RESULT
END

SELECT ITM.ID,ITM.ITEMCODE AS MALZEMEKODU,ITM.ITEMNAME AS MALZEMEADI,
DBO.GET_ITEM_PRICE(ITM.ID,'MIN') AS ENDUSUKFIYAT
FROM ITEMS AS ITM

-----------------------------------------------------------------------------------------

-->TABLE VALUED FUNCTIONS -->TEK SEFERDE BÝRDEN FAZLA FONKSIYON ALACAKSAM!

CREATE FUNCTION DBO.GET_ITEM_INFO(@ITEMID INT)
RETURNS TABLE 
AS
RETURN
(
SELECT 
	MIN(UNITPRICE) AS MINPRICE,
	MAX(UNITPRICE) AS MAXPRICE,
	AVG(UNITPRICE) AS AVGPRICE,
	SUM(LINETOTAL) AS TOTALSALE,
	SUM(AMOUNT) AS TOTALAMOUNT
FROM ORDERDETAILS WHERE ITEMID=@ITEMID -->ÝSTEDÝÐÝM SQL SORGUSUNU FONKSIYON OLARAK DÖNDÜRMEMÝ SAÐLIYOR!
)

SELECT * FROM DBO.GET_ITEM_INFO(3) -->TABLE-VALUED FUNCTION OLUNCA BU ÞEKÝLDE ÇAÐIRMALISIN!

-->TABLE-VALUED FUNCTION'I TABLE-VALUED FUNCTION LA CROSS APPLY ÝLE BÝRLEÞTÝRÝRSÝN!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

CROSS APPLY DBO.GET_ITEM_INFO(ITM.ID) AS ITEMINFO 

--ITEMINFO.MINPRICE --> TABLE-VALUED FUNCTION DAN GELEN DEÐERÝ BU ÞEKÝLDE ALIRSIN!
--DBO.GET_ITEM_PRICE(ITM.ID,'MIN') -->YUKARIDAKÝ FONKSIYONLA AYNI ÝÞÝ YAPAR!






